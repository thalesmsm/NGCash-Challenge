import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useEffect, useState } from "react";
import { getTransactions, getUsers } from "../fetchs/fetchs";
import IUser from "../interfaces/IUser";

interface ITransaction {
  id: number,
  value: number,
  debitedAccountId: number,
  creditedAccountId: number,
  createdAt: string,
  debitedAccount: {
    balance: number
  },
  creditedAccount: {
    balance: number
  }
}

const Account = () => {
  const [username, setUsername] = useState<string>();
  const [userLogged, setUserLogged] = useState<IUser>();
  const [transactions, setTransactions] = useState<ITransaction[]>();

  
  useEffect(() => {
    const setUsers = async () => {
      const allUsers = await getUsers();
      const findUser: IUser | undefined = allUsers.find((user: { username: string | undefined; }) => user.username === username);
      setUserLogged(findUser);
    }
    setUsers();

    const localUsername = localStorage.getItem('username');   
    localUsername && setUsername(localUsername)

  }, [username]);
  
  useEffect(() => {  
    const token = localStorage.getItem('token');

    if (userLogged && token)
      getTransactions(userLogged.accountId, token).then((res) => setTransactions(res));

  },[userLogged]);

  const logOut = async () => {
    localStorage.removeItem('username');
    localStorage.removeItem('token');
  }

  return (
    <div>
      <Head>
        <title>NG.Cash | Account</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header>
        <div className="flex justify-between items-center border-b-[1px] py-4">
          <p className="text-lg">Olá, {userLogged?.username}!</p>
          <Image src="/logo-ngcash.svg" width={90} height={90} alt="ng Logo" />
          <div className="flex flex-col justify-between items-center h-14">
            <p>Saldo: <span>R$ {userLogged && userLogged.account.balance}</span></p>
            <Link href="/">
              <button
              className="ml-4 bg-gradient-to-br from-gray-400 to-gray-600 text-white font-bold px-4 rounded hover:bg-gradient-to-br hover:from-gray-500 hover:to-gray-700"
              onClick={logOut}
              >
                Sair
              </button>
            </Link>
          </div>
        </div>
      </header>
      <main>
        <section>
          <h1>Histórico</h1>
          <table>
        <thead>
          <tr>
            <th>Transação</th>
            <th>Valor</th>
            <th>data</th>
          </tr>
        </thead>
        <tbody>
          {transactions?.map((transaction) => (
            <tr key={ transaction.id }>
              <td>{userLogged?.accountId === transaction.debitedAccountId ? 'Cash out' : 'Cash in'}</td>
              <td className={`${userLogged?.accountId === transaction.debitedAccountId ? 'text-red-500' : 'text-green-500'} `}>
                {`${
                  userLogged?.accountId === transaction.debitedAccountId ?
                  `- R$ ${transaction.value.toFixed(2)}` :
                  ` R$ ${transaction.value.toFixed(2)}`
                }`}
              </td>
              <td>{transaction.createdAt}</td>
            </tr>
          ))}
        </tbody>
      </table>
        </section>
      </main>
    </div>
  );
}

export default Account;
